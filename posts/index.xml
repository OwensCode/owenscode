<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on What I Learned Today</title>
    <link>https://owenscode.github.io/posts/</link>
    <description>Recent content in Posts on What I Learned Today</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Mar 2019 14:54:31 -0400</lastBuildDate>
    
	<atom:link href="https://owenscode.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Oysters</title>
      <link>https://owenscode.github.io/posts/2019/03/oysters/</link>
      <pubDate>Sat, 30 Mar 2019 14:54:31 -0400</pubDate>
      
      <guid>https://owenscode.github.io/posts/2019/03/oysters/</guid>
      <description>I chaperoned a school field trip to an aquarium this week, and one of the things we learned is that oysters filter the water they live in. Full grown oysters can actually filter up to 50 gallons per day. That is pretty amazing for such a small creature. In addition to the nutrients they consume in the form of microscopic species, they also remove algae, dirt and some types of pollution from the water.</description>
    </item>
    
    <item>
      <title>Running Airflow With Systemd</title>
      <link>https://owenscode.github.io/posts/2019/03/running-airflow-with-systemd/</link>
      <pubDate>Sun, 24 Mar 2019 14:40:05 -0400</pubDate>
      
      <guid>https://owenscode.github.io/posts/2019/03/running-airflow-with-systemd/</guid>
      <description>The Linux system on the EC2 I&amp;rsquo;m using is similar to CentOS and uses systemd for managing system services. If you want to run Airflow as a system service so that it can be started automatically and managed by the operation system, integrating it with systemd is a good option and is not difficult to do.
The Airflow project documentation provides the basic information needed for running Airflow with systemd, which makes setup relatively easy, but I felt that the instructions could be a little clearer and I needed to tweak a few things to get it working for my installation.</description>
    </item>
    
    <item>
      <title>Airflow on amazonlinux</title>
      <link>https://owenscode.github.io/posts/2019/03/airflow-on-amazonlinux/</link>
      <pubDate>Sat, 16 Mar 2019 07:36:56 -0400</pubDate>
      
      <guid>https://owenscode.github.io/posts/2019/03/airflow-on-amazonlinux/</guid>
      <description>I spent some time yesterday installing Apache Airflow in a Docker container, using an image based on the amazonlinux image provided by Amazon. The end goal is to run it in an EC2 instance, but while I was waiting for the ops team to create one for me, I decided to experiment with setting it up in Docker. Using the amazonlinux image should give me a similar environment to what I can expect on the EC2.</description>
    </item>
    
    <item>
      <title>Static Site Generators</title>
      <link>https://owenscode.github.io/posts/2019/03/static-site-generation/</link>
      <pubDate>Tue, 12 Mar 2019 21:33:39 -0400</pubDate>
      
      <guid>https://owenscode.github.io/posts/2019/03/static-site-generation/</guid>
      <description>Today I learned that there are a lot of static site generators out there. It&amp;rsquo;s apparently something that has gained a lot of interest. I&amp;rsquo;m mainly interested in generating my content from Markdown files, so at least that gave me somewhere to start when narrowing down the list to try. I&amp;rsquo;m interested in static site generation after my experience with a Movable Type blog I had at some point, which could publish static html content and as a result loaded really fast.</description>
    </item>
    
  </channel>
</rss>